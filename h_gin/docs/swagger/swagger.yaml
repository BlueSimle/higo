basePath: /v1
host: 127.0.0.1:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server Petstore server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /admin/check/access:
    get:
      parameters:
      - description: Test
        in: query
        name: test
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: 鉴定权限
      tags:
      - rbac
  /admin/permission:
    get:
      parameters:
      - description: Token
        in: header
        name: Token
        required: true
        type: string
      - description: Test
        in: query
        name: test
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: 获取权限
      tags:
      - rbac
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: Token
        in: header
        name: Token
        required: true
        type: string
      - description: Test
        in: formData
        name: test
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: 添加权限
      tags:
      - rbac
  /admin/role:
    get:
      parameters:
      - description: Token
        in: header
        name: Token
        required: true
        type: string
      - description: Test
        in: query
        name: test
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: 获取角色
      tags:
      - rbac
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: Token
        in: header
        name: Token
        required: true
        type: string
      - description: Test
        in: formData
        name: test
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: 添加角色
      tags:
      - rbac
  /login/auth:
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: UserName
        in: formData
        name: user_name
        required: true
        type: string
      - description: PassWord
        in: formData
        name: pass_word
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: 登录授权
      tags:
      - auth
  /login/check:
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: Token
        in: formData
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: 登录授权检查
      tags:
      - auth
  /test/add:
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: Token
        in: header
        name: Token
        required: true
        type: string
      - description: Test
        in: formData
        name: test
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: 测试专用
      tags:
      - test
  /test/info:
    get:
      parameters:
      - description: Token
        in: header
        name: Token
        required: true
        type: string
      - description: Test
        in: query
        name: test
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: 测试专用
      tags:
      - test
  /user:
    delete:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: Token
        in: header
        name: Token
        required: true
        type: string
      - description: UserId
        in: formData
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: 删除用户
      tags:
      - user
    get:
      parameters:
      - description: Token
        in: header
        name: Token
        required: true
        type: string
      - description: userId
        in: query
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":"","msg":"ok"}'
          schema:
            type: string
      summary: 获取用户信息
      tags:
      - user
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: Token
        in: header
        name: Token
        required: true
        type: string
      - description: NickName
        in: formData
        name: nick_name
        required: true
        type: string
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Phone
        in: formData
        name: phone
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: 新增用户
      tags:
      - user
    put:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: Token
        in: header
        name: Token
        required: true
        type: string
      - description: UserId
        in: formData
        name: user_id
        required: true
        type: integer
      - description: NickName
        in: formData
        name: nick_name
        required: true
        type: string
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Phone
        in: formData
        name: phone
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: 修改用户
      tags:
      - user
swagger: "2.0"
